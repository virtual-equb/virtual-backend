name: Members
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/member/registerMember
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register member'
      description: 'This api regsters members.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: 'The name of the member.'
        required: true
        example: eyob
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone of the member.'
        required: true
        example: '0911212121'
        type: string
        custom: []
      gender:
        name: gender
        description: 'The gender of the member.'
        required: true
        example: male
        type: string
        custom: []
      city:
        name: city
        description: 'The city of the member.'
        required: true
        example: 'Addis Ababa'
        type: string
        custom: []
      woreda:
        name: woreda
        description: 'The woreda of the member.'
        required: true
        example: 1
        type: integer
        custom: []
      housenumber:
        name: housenumber
        description: 'The house number of the member.'
        required: true
        example: 1111
        type: integer
        custom: []
      location:
        name: location
        description: 'The location of the member.'
        required: true
        example: bole
        type: string
        custom: []
      password:
        name: password
        description: 'The password of the member.'
        required: true
        example: P@ssw0rd
        type: string
        custom: []
    cleanBodyParameters:
      full_name: eyob
      phone: '0911212121'
      gender: male
      city: 'Addis Ababa'
      woreda: 1
      housenumber: 1111
      location: bole
      password: P@ssw0rd
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Member registered successfully."
               "user": {
                  "id": 1,
                  "full_name": "Eyob",
                  "phone": "0911212121",
                  "gender": "Male",
                  "city": "Addis Ababa",
                  "woreda": 1,
                  "housenumber": 1111,
                  "location": "Bole"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "message": "Unknown error occurred, Please try again!."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/member/updateProfile/{id}'
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update profile'
      description: 'This api updates members profiles.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the updateProfile.'
        required: true
        example: quis
        type: string
        custom: []
    cleanUrlParameters:
      id: quis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: 'The ame of the member.'
        required: true
        example: eyob
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone of the member.'
        required: true
        example: 911252525
        type: integer
        custom: []
      gender:
        name: gender
        description: 'The gender of the member.'
        required: true
        example: male
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the member.'
        required: true
        example: eyob@gmail.com
        type: string
        custom: []
      city:
        name: city
        description: 'The city of the member.'
        required: true
        example: 'Addis Ababa'
        type: string
        custom: []
      subcity:
        name: subcity
        description: 'The subcity of the member.'
        required: true
        example: Bole
        type: string
        custom: []
      woreda:
        name: woreda
        description: 'The woreda of the member.'
        required: true
        example: '05'
        type: string
        custom: []
      housenumber:
        name: housenumber
        description: 'The housenumber of the member.'
        required: true
        example: '1414'
        type: string
        custom: []
      location:
        name: location
        description: 'The location of the member.'
        required: true
        example: Bole
        type: string
        custom: []
    cleanBodyParameters:
      full_name: eyob
      phone: 911252525
      gender: male
      email: eyob@gmail.com
      city: 'Addis Ababa'
      subcity: Bole
      woreda: '05'
      housenumber: '1414'
      location: Bole
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/checkMemberPhoneExist
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Check if phone exists'
      description: 'This api checks if phone exists.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      phone:
        name: phone
        description: 'The phone number of the member.'
        required: true
        example: 911111111
        type: integer
        custom: []
    cleanBodyParameters:
      phone: 911111111
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/getMembersByEqubType
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all users with equb type'
      description: 'This api returns all users with pagination.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      equbType:
        name: equbType
        description: 'The equb type to filter.'
        required: true
        example: Manual
        type: string
        custom: []
    cleanBodyParameters:
      equbType: Manual
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"totalUsers":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/phoneCheck
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Check if phone exists'
      description: 'This api checks if phone exists.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      m_id:
        name: m_id
        description: 'The id of the member.'
        required: true
        example: 1
        type: integer
        custom: []
      phone:
        name: phone
        description: 'The phone number of the member.'
        required: true
        example: 911111111
        type: integer
        custom: []
    cleanBodyParameters:
      m_id: 1
      phone: 911111111
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/member
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all members'
      description: 'This api returns all members.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/member/getMemberById/{id}'
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get member by id'
      description: 'This api returns member using an id.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the getMemberById.'
        required: true
        example: autem
        type: string
        custom: []
    cleanUrlParameters:
      id: autem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"member":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/member/clearSearchEntry
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Clear search entry'
      description: 'This api clear search entry.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/member/loadMoreMember/{offsetVal}/{pageNumberVal}'
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Load more members'
      description: 'This api returns more members.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      offsetVal:
        name: offsetVal
        description: ''
        required: true
        example: velit
        type: string
        custom: []
      pageNumberVal:
        name: pageNumberVal
        description: ''
        required: true
        example: eos
        type: string
        custom: []
    cleanUrlParameters:
      offsetVal: velit
      pageNumberVal: eos
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/member/get-equbs/{id}'
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show members equbs'
      description: 'This api shows members equbs.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the get equb.'
        required: true
        example: harum
        type: string
        custom: []
    cleanUrlParameters:
      id: harum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/member/search-member/{searchInput}/{offset}/{pageNumber?}'
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Search members'
      description: 'This api searches members.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      searchInput:
        name: searchInput
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      offset:
        name: offset
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      pageNumber:
        name: pageNumber
        description: ''
        required: false
        example: earum
        type: string
        custom: []
    cleanUrlParameters:
      searchInput: ut
      offset: voluptatem
      pageNumber: earum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      searchInput:
        name: searchInput
        description: 'The search input.'
        required: true
        example: eyob/0911212121
        type: string
        custom: []
    cleanBodyParameters:
      searchInput: eyob/0911212121
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/member/get-allEqubs
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All Equbs'
      description: 'This api returns all equbs.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/member/create-member
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/member/register
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create member'
      description: 'This api created equbs.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: 'The name of the member.'
        required: true
        example: eyob
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone of the member.'
        required: true
        example: '0911212121'
        type: string
        custom: []
      gender:
        name: gender
        description: 'The gender of the member.'
        required: true
        example: male
        type: string
        custom: []
      city:
        name: city
        description: 'The city of the member.'
        required: true
        example: 'Addis Ababa'
        type: string
        custom: []
      woreda:
        name: woreda
        description: 'The woreda of the member.'
        required: true
        example: 1
        type: integer
        custom: []
      housenumber:
        name: housenumber
        description: 'The house number of the member.'
        required: true
        example: 1111
        type: integer
        custom: []
      location:
        name: location
        description: 'The location of the member.'
        required: true
        example: bole
        type: string
        custom: []
    cleanBodyParameters:
      full_name: eyob
      phone: '0911212121'
      gender: male
      city: 'Addis Ababa'
      woreda: 1
      housenumber: 1111
      location: bole
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/member/update/{id}'
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update member'
      description: 'This api updates member status.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: deleniti
        type: string
        custom: []
    cleanUrlParameters:
      id: deleniti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: 'The ame of the member.'
        required: true
        example: eyob
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone of the member.'
        required: true
        example: 911252525
        type: integer
        custom: []
      gender:
        name: gender
        description: 'The gender of the member.'
        required: true
        example: male
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the member.'
        required: true
        example: eyob@gmail.com
        type: string
        custom: []
      city:
        name: city
        description: 'The city of the member.'
        required: true
        example: 'Addis Ababa'
        type: string
        custom: []
      subcity:
        name: subcity
        description: 'The subcity of the member.'
        required: true
        example: Bole
        type: string
        custom: []
      woreda:
        name: woreda
        description: 'The woreda of the member.'
        required: true
        example: '05'
        type: string
        custom: []
      housenumber:
        name: housenumber
        description: 'The housenumber of the member.'
        required: true
        example: '1414'
        type: string
        custom: []
      location:
        name: location
        description: 'The location of the member.'
        required: true
        example: Bole
        type: string
        custom: []
    cleanBodyParameters:
      full_name: eyob
      phone: 911252525
      gender: male
      email: eyob@gmail.com
      city: 'Addis Ababa'
      subcity: Bole
      woreda: '05'
      housenumber: '1414'
      location: Bole
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/member/updateStatus/{id}'
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update member status'
      description: 'This api updates member status.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the updateStatus.'
        required: true
        example: omnis
        type: string
        custom: []
    cleanUrlParameters:
      id: omnis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/member/delete/{id}'
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Member'
      description: 'This api deletes member.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: vitae
        type: string
        custom: []
    cleanUrlParameters:
      id: vitae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
