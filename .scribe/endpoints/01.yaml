name: Users
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/checkUserPhoneExist
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Check if phone exists'
      description: 'This api checks if phone exists.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      phone:
        name: phone
        description: 'The phone number of the user.'
        required: true
        example: '0911222222'
        type: string
        custom: []
    cleanBodyParameters:
      phone: '0911222222'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/resetPassword
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset Password From App'
      description: 'This api resets users passwords.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      u_id:
        name: u_id
        description: 'The id of the user.'
        required: true
        example: '1'
        type: string
        custom: []
      reset_password:
        name: reset_password
        description: 'The password to be reset.'
        required: true
        example: P@ssw0rd
        type: string
        custom: []
    cleanBodyParameters:
      u_id: '1'
      reset_password: P@ssw0rd
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/sendOtp/{phone}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Sent OTP'
      description: 'This api sends OTP.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      phone:
        name: phone
        description: ''
        required: true
        example: porro
        type: string
        custom: []
    cleanUrlParameters:
      phone: porro
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"acknowledge":"error","response":{"errors":["Recipient phone number is invalid ."],"relatedObject":"\/api\/challenge?from=e80ad9d8-adf3-463f-80f4-7c4b39f7f164&sender=Vintage&to=porro&pr=Your%20OTP%20is&sb=1&sa=0&ttl=300&len=6&t=0"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/verifyOtp/{code}/{phone}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verify OTP'
      description: 'This api verifies OTP.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: ''
        required: true
        example: at
        type: string
        custom: []
      phone:
        name: phone
        description: ''
        required: true
        example: reprehenderit
        type: string
        custom: []
    cleanUrlParameters:
      code: at
      phone: reprehenderit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"acknowledge":"error","response":{"errors":["Seems like we dont have this code in our database for this phone or verification id. Please try again..."],"relatedObject":"\/api\/verify?&to=reprehenderit&code=at"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all users'
      description: 'This api returns all users.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/userPhoneCheck
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Check if phone exists'
      description: 'This api checks if phone exists.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The id of the user.'
        required: true
        example: '1'
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone number of the user.'
        required: true
        example: '0911222222'
        type: string
        custom: []
    cleanBodyParameters:
      id: '1'
      phone: '0911222222'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/emailCheck
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Check if email exists'
      description: 'This api checks if email exists.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      u_id:
        name: u_id
        description: 'The id of the user.'
        required: true
        example: '1'
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: eyob@gmail.com
        type: string
        custom: []
    cleanBodyParameters:
      u_id: '1'
      email: eyob@gmail.com
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/changePassword/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Change Password'
      description: 'This api changes passwords.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the changePassword.'
        required: true
        example: necessitatibus
        type: string
        custom: []
    cleanUrlParameters:
      id: necessitatibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      old_password:
        name: old_password
        description: 'The old password to be reset.'
        required: true
        example: P@ssw0rd
        type: string
        custom: []
      new_password:
        name: new_password
        description: 'The new password to be reset.'
        required: true
        example: P@ssw0rd
        type: string
        custom: []
    cleanBodyParameters:
      old_password: P@ssw0rd
      new_password: P@ssw0rd
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/user/user/{offsetVal}/{pageNumberVal}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all users with pagination'
      description: 'This api returns all users with pagination.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      offsetVal:
        name: offsetVal
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
      pageNumberVal:
        name: pageNumberVal
        description: ''
        required: true
        example: architecto
        type: string
        custom: []
    cleanUrlParameters:
      offsetVal: 1
      pageNumberVal: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/user/deactiveUser/{offsetVal}/{pageNumberVal}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get deactivated users with pagination'
      description: 'This api returns deactivated users with pagination.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      offsetVal:
        name: offsetVal
        description: ''
        required: true
        example: vel
        type: string
        custom: []
      pageNumberVal:
        name: pageNumberVal
        description: ''
        required: true
        example: fugiat
        type: string
        custom: []
    cleanUrlParameters:
      offsetVal: vel
      pageNumberVal: fugiat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/store-user
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create user'
      description: 'This api creates a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: eyob
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: eyob@gmail.com
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: 'The phone of the user.'
        required: true
        example: '0911111111'
        type: string
        custom: []
      gender:
        name: gender
        description: 'The gender of the user.'
        required: true
        example: male
        type: string
        custom: []
      role:
        name: role
        description: 'The role of the user.'
        required: true
        example: admin
        type: string
        custom: []
    cleanBodyParameters:
      name: eyob
      email: eyob@gmail.com
      phone_number: '0911111111'
      gender: male
      role: admin
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/user/edit/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the edit.'
        required: true
        example: qui
        type: string
        custom: []
    cleanUrlParameters:
      id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/user/update/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user'
      description: 'This api updates a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: deleniti
        type: string
        custom: []
    cleanUrlParameters:
      id: deleniti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: eyob
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: eyob@gmail.com
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: 'The phone of the user.'
        required: true
        example: '0911111111'
        type: string
        custom: []
      gender:
        name: gender
        description: 'The gender of the user.'
        required: true
        example: male
        type: string
        custom: []
      role:
        name: role
        description: 'The role of the user.'
        required: true
        example: admin
        type: string
        custom: []
    cleanBodyParameters:
      name: eyob
      email: eyob@gmail.com
      phone_number: '0911111111'
      gender: male
      role: admin
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/user/deactivateUser/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Deactivate user'
      description: 'This api deactivates a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the deactivateUser.'
        required: true
        example: voluptatem
        type: string
        custom: []
    cleanUrlParameters:
      id: voluptatem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/user/activateUser/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Activate user'
      description: 'This api activates a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the activateUser.'
        required: true
        example: velit
        type: string
        custom: []
    cleanUrlParameters:
      id: velit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/user/delete/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete user'
      description: 'This api deletes a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: in
        type: string
        custom: []
    cleanUrlParameters:
      id: in
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/resetPassword
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset Password'
      description: 'This api resets users passwords.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      u_id:
        name: u_id
        description: 'The id of the user.'
        required: true
        example: '1'
        type: string
        custom: []
      password:
        name: password
        description: 'The password to be reset.'
        required: true
        example: P@ssw0rd
        type: string
        custom: []
    cleanBodyParameters:
      u_id: '1'
      password: P@ssw0rd
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
